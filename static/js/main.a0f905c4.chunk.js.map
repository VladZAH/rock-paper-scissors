{"version":3,"sources":["images/rock.jpg","images/paper.jpg","images/scissors.jpg","components/Display.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Display","choice","this","props","img","rock","paper","scissors","style","display","src","width","height","border","borderRadius","React","Component","Game","cmpchoice","yourchoice","cimage","yourimage","App","reset","setState","you","computer","yourChoice","cmpChoice","winner","state","alert","pickRandom","pick","random","Math","floor","setTimeout","className","onClick","justifyContent","backgroundColor","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0f905c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.00b8386a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paper.b9fa37f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scissors.161404b0.jpg\";","import React from 'react';\nimport rock from \"../images/rock.jpg\";\nimport paper from \"../images/paper.jpg\";\nimport scissors from \"../images/scissors.jpg\";\n\nclass Display extends React.Component {\n    \n    render(){\n        let style = {width: 200, height: 200, border: '4px solid black', borderRadius: '50%'};\n        let choice\n        if(this.props.img === \"rock\"){\n            choice = rock;\n        }else if(this.props.img === \"paper\"){\n            choice = paper;\n        }else{\n            choice = scissors;\n        }\n        return (\n            <div style={{display: 'inline'}}>\n                <img src={choice} style={style}></img>\n            </div>\n        );\n    }\n}\n\nexport default Display;","import React from 'react';\nimport rock from \"../images/rock.jpg\";\nimport paper from \"../images/paper.jpg\";\nimport scissors from \"../images/scissors.jpg\";\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props);\n      }\n\n    render(){\n        var style = {width: 400, height: 400};\n        let cmpchoice\n        if(this.props.cimage === \"rock\"){\n            cmpchoice = rock;\n        }else if(this.props.cimage === \"paper\"){\n            cmpchoice = paper;\n        }else if (this.props.cimage === \"scissors\"){\n            cmpchoice = scissors;\n        }        \n        let yourchoice\n        if(this.props.yourimage === \"rock\"){\n            yourchoice = rock;\n        }else if(this.props.yourimage === \"paper\"){\n            yourchoice = paper;\n        }else if(this.props.yourimage === \"scissors\"){\n            yourchoice = scissors;\n        }\n        return (\n            <div>\n                <h4>Rock Paper Scissors Game vs Computer</h4>\n                <h4>Whoever first scores 5 points, wins the game.</h4>\n                <div display=\"inline\">\n                    <img src={yourchoice} style={style}></img>\n                    <img src={cmpchoice} style={style}></img>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react'; \nimport './App.css';\nimport Display from \"./components/Display\";\nimport Game from \"./components/Game\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      you: 0,\n      computer: 0,\n      cmpChoice: null,\n      yourChoice: null,\n      border: \"4px solid green\"\n    }\n  }\n\n  \n  reset = () => {\n    this.setState({you: 0, computer: 0, yourChoice: null, cmpChoice: null});\n  }\n\n  winner = () => {\n    if(this.state.computer === 5){\n      alert(\"Computer won! ðŸ¤– \")\n      this.reset();\n    }else if(this.state.you === 5){\n      alert(\"Congratulations, you won! ðŸ¤  \")\n      this.reset();\n    }\n  }\n\n  pickRandom = (pick) => {\n      let chs = ['rock', 'paper', 'scissors'];\n      let random = chs[Math.floor(Math.random() * 3)];  \n      if((pick === \"rock\" && random === \"paper\") || (pick === \"paper\" && random === \"scissors\") || (pick === \"scissors\" && random === \"rock\")){\n        this.setState({cmpChoice: random, yourChoice: pick, computer: this.state.computer + 1});\n      }else if((pick === \"paper\" && random === \"rock\") || (pick === \"scissors\" && random === \"paper\") || (pick === \"rock\" && random === \"scissors\")){\n        this.setState({cmpChoice: random, yourChoice: pick, you: this.state.you + 1});\n      }else{\n        this.setState({cmpChoice: random, yourChoice: pick});\n      }\n  }\n  \n  componentDidUpdate(){\n    setTimeout(() => {\n      if(this.state.you === 5 || this.state.computer === 5){\n        this.winner();\n      }\n    }, 1)\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <a onClick={() => {this.pickRandom(\"rock\")}}><Display img=\"rock\" /></a>\n            <a onClick={() => {this.pickRandom(\"paper\")}}><Display img=\"paper\" /></a>\n            <a onClick={() => {this.pickRandom(\"scissors\")}}><Display img=\"scissors\" /></a>\n          </div>\n          <div style={{display: 'flex', justifyContent: \"center\"}}>\n            <p style={{width: '50%'}}>PLAYER<br/>{this.state.you}<br/></p>\n            <p style={{width: '50%'}}>COMPUTER<br/>{this.state.computer}<br/></p>\n          </div>\n          <div>\n          <Game cimage={this.state.cmpChoice ? this.state.cmpChoice : null} yourimage={this.state.yourChoice}/>\n          <button style={{height: '50px', width: '200px', backgroundColor: 'gainsboro', fontSize: '30px'}} onClick={this.reset}>RESET</button>\n          </div>\n        </header>\n      </div>\n    );    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}